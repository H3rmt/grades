//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "grades")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub subject: i32,
    pub r#type: i32,
    pub info: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::grade_types::Entity",
        from = "Column::Type",
        to = "super::grade_types::Column::Id",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    GradeTypes,
    #[sea_orm(
        belongs_to = "super::subjects::Entity",
        from = "Column::Subject",
        to = "super::subjects::Column::Id",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    Subjects,
}

impl Related<super::grade_types::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GradeTypes.def()
    }
}

impl Related<super::subjects::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Subjects.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
